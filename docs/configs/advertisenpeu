server {
    listen   80;
    listen   [::]:80;
    server_name advertise.nightpaws.eu;

    # Lets encrypt
    #letsencrypt-auto certonly -a webroot --webroot-path=/tmp/letsencrypt-auto --rsa-key-size 4096 --agree-tos -d www.nightpaws.eu -d nightpaws.eu
    location '/.well-known/acme-challenge' {
        default_type "text/plain";
        root        /tmp/letsencrypt-auto;
    }

    # all following requests should use redirected to the new using https
   rewrite ^/(.*) https://advertise.nightpaws.eu/$1 permanent;
}

server {
    # SSL configuration
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name advertise.nightpaws.eu;

    ssl_certificate /etc/letsencrypt/live/nightpaws.eu/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nightpaws.eu/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;
    #ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_dhparam /etc/nginx/dhparmCert/dhparam.pem;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

    # pass the request to the node.js server with the correct headers
    # and much more can be added, see nginx config options
    location / {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;

      proxy_pass https://127.0.0.1:3001/;
      proxy_redirect off;
    }
}
